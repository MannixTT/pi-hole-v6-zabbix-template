zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
  templates:
    - uuid: b14588fd2ff342cea14e56fbe53876e6
      template: 'APP-Pi-hole by HTTP'
      name: 'APP-Pi-hole by HTTP'
      description: |
        Get Pi-hole metrics by HTTP agent from the new REST API.
        
        Don't forget change macros {$PIHOLE.API.URL}, {$PIHOLE.PASSWORD}.
        Some metrics may not be collected depending on your Pi-hole use case.
        
        Please leave feedback. Pull requests to improve the use case and functionality would be great.
        
        Author: MannixTT
      groups:
        - name: Templates
      items:
        - uuid: 303f7c1c45534d6f92e57fb01af59ecf
          name: 'Active clients'
          type: DEPENDENT
          key: pihole.clients.active
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.active_clients
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: environment
        - uuid: ae5f373b5e3949f0b786d671baa74932
          name: 'Total clients'
          type: DEPENDENT
          key: pihole.clients.total
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.clients.total
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: environment
        - uuid: e48fe06ba47344f0a6cc844a131bab20
          name: 'DHCP status'
          type: DEPENDENT
          key: pihole.dhcp.status
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.config.dhcp_active
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: health
          triggers:
            - uuid: 561c436b87264092b288ad5f7fbdd769
              expression: 'last(/APP-Pi-hole by HTTP/pihole.dhcp.status)<>"enabled" and  length(last(/APP-Pi-hole by HTTP/pihole.dhcp.status))>0'
              name: 'DHCP is disabled'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'Disable this trigger in case pi-hole is not your DHCP server'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: availability
        - uuid: d8b19e6f52144c1b97d5de37081a4ab0
          name: 'DNSSEC status'
          type: DEPENDENT
          key: pihole.dnssec.status
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.config.dns_dnssec
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: component
              value: health
          triggers:
            - uuid: baeb4bd11aac4c66b6feb817f1b4ff65
              expression: 'last(/APP-Pi-hole by HTTP/pihole.dnssec.status)<>"true" and  length(last(/APP-Pi-hole by HTTP/pihole.dnssec.status))>0'
              name: 'DNSSEC is disabled'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'Enable DNSSEC for enhanced security.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: security
        - uuid: a85322cd5ae6498c9a2ae5762772c2c5
          name: 'Get errors'
          type: DEPENDENT
          key: pihole.get.errors
          delay: '0'
          history: 7d
          value_type: TEXT
          trends: '0'
          description: 'The errors from API requests.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.error
              error_handler: CUSTOM_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: health
          triggers:
            - uuid: 76c64931fd224450b81937901a89f108
              expression: 'length(last(/APP-Pi-hole by HTTP/pihole.get.errors))>0'
              name: 'There are errors in requests to API'
              opdata: '{ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'Zabbix has received errors in response to API requests.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 24671418c48c46aaa70d081821e1c4b9
          name: 'Get message serverity'
          type: DEPENDENT
          key: pihole.get.messages
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.messages.messages
            - type: JAVASCRIPT
              parameters:
                - |
                  function processLogData(jsonString) {
                    try {
                      // JSON-String parsen
                      const data = JSON.parse(jsonString);
                  
                      if (!Array.isArray(data) || data.length === 0) {
                        // console.warn("Input ist kein nicht-leeres Array."); // console kann fehlen
                        return 0;
                      }
                  
                      const logEntry = data[0];
                  
                      if (typeof logEntry !== 'object' || logEntry === null || !logEntry.hasOwnProperty('plain') || typeof logEntry.plain !== 'string') {
                         // console.warn("First element isn't a object containting a string 'plain' array.");
                         return 0;
                      }
                  
                      const plainText = logEntry.plain;
                      const lowerCasePlainText = plainText.toLowerCase();
                  
                      if (lowerCasePlainText.indexOf("warning") !== -1) {
                        return 1; // Warning
                      } else if (lowerCasePlainText.indexOf("error") !== -1) {
                        return 2; // Error
                      } else {
                        return 0; // no Warning or Error
                      }
                  
                    } catch (error) {
                      // console.error("Error during processing:", error);
                      return 0; // Return 0 in case of an error
                    }
                  }
                  return processLogData(value);
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: health
          triggers:
            - uuid: 0f1eda6fac53470ba54ece8e40d2a1a4
              expression: 'last(/APP-Pi-hole by HTTP/pihole.get.messages)=2'
              name: 'Message severity Error'
              priority: HIGH
              description: 'Check your pi-hole diagnostics'
            - uuid: 2466dd0f1c9142c483878a5f8d36c5af
              expression: 'last(/APP-Pi-hole by HTTP/pihole.get.messages)=1'
              name: 'Message severity Warning'
              priority: WARNING
              description: 'Check your pi-hole diagnostics'
        - uuid: fe9fb01d1809403c8287beb51bcadefe
          name: 'Get metrics'
          type: SCRIPT
          key: pihole.get.metrics
          delay: 5m
          history: '0'
          value_type: TEXT
          trends: '0'
          params: |
            var Pihole = {
                params: {},
                sid: '',
            
                setParams: function (params) {
                    ['api_endpoint', 'password'].forEach(function (field) {
                        if (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {
                            throw 'Required param is not set: ' + field + '.';
                        }
                    });
            
                    Pihole.params = params;
                },
            
                getSessionID: function () {
                    var request = new HttpRequest();
                    request.addHeader('Accept: application/json');
                    request.addHeader('Content-Type: application/json');
                    var postData = JSON.stringify({ password: Pihole.params.password });
            
                    var response = request.post(Pihole.params.api_endpoint + "/auth", postData);
            
                    if (request.getStatus() !== 200 || !response) {
                        throw 'Login failed with status code ' + request.getStatus() + ': ' + response;
                    }
            
                    try {
                        var jsonResponse = JSON.parse(response);
                        if (jsonResponse.session && jsonResponse.session.message === "password incorrect") {
                            throw 'Authentication failed: Incorrect password.';
                        }
            
                        if (!jsonResponse.session || !jsonResponse.session.sid) {
                            throw 'Authentication response does not contain a valid session ID (SID).';
                        }
            
                        Pihole.sid = jsonResponse.session.sid;
            
                    } catch (error) {
                        throw 'Failed to parse authentication response: ' + error;
                    }
                },
            
                request: function (url) {
                    var request = new HttpRequest();
                    request.addHeader('Content-Type: application/json');
                    var response = request.get(url + "?sid=" + encodeURIComponent(Pihole.sid));
            
                    if (request.getStatus() !== 200 || response === null) {
                        throw 'Request failed with status code ' + request.getStatus() + ': ' + response;
                    }
            
                    try {
                        return JSON.parse(response);  // Parse the response if it's valid JSON
                    } catch (error) {
                        throw 'Failed to parse response received from API.';
                    }
                },
            
                // Function to delete the current session
                deleteSession: function (sid) {
                    if (!sid) {
                        Zabbix.log(3, '[ PIHOLE ] No valid session ID available for deletion.');
                        return;
                    }
                    var request = new HttpRequest();
                    request.addHeader('Accept: application/json');
            
                    var response = request.delete(Pihole.params.api_endpoint + "/auth" + "?sid=" + encodeURIComponent(Pihole.sid));
                    
            		if (request.getStatus() === 204) {
                        Zabbix.log(4, '[ PIHOLE ] Session deleted successfully.');
                    } else {
                        Zabbix.log(3, '[ PIHOLE ] Failed to delete session. Status: ' + request.getStatus() + ', Response: ' + response);
                    }
                },
            
                getMetricsData: function () {
                    var data = {};
                    var endpoints = {
                        "summary": "/stats/summary",
                        "upstreamDNS": "/stats/upstreams",
                        "messages": "/info/messages",
            			"padd": "/padd"
                    };
            
                    Object.keys(endpoints).forEach(function (key) {
                        var responseData = Pihole.request(Pihole.params.api_endpoint + endpoints[key]);
                        data[key] = responseData;
                    });
            
                    return data;
                }
            };
            
            try {
                Pihole.setParams(JSON.parse(value));  		// Ensure the params are set
                Pihole.getSessionID();  					// Fetch SID
                var metricsData = Pihole.getMetricsData();  // Fetch metrics data
                var result = JSON.stringify({ "data": metricsData });
                Pihole.deleteSession(Pihole.sid);  			// Delete session after fetching metrics
                return result;
            } catch (error) {
                error += (String(error).endsWith('.')) ? '' : '.';
                Zabbix.log(3, '[ PIHOLE ] ERROR: ' + error);
                Pihole.deleteSession(Pihole.sid);  			// Delete session in case of error
                return JSON.stringify({ 'error': error });
            }
          parameters:
            - name: api_endpoint
              value: '{$PIHOLE.API.URL}'
            - name: password
              value: '{$PIHOLE.PASSWORD}'
          tags:
            - tag: component
              value: raw
        - uuid: 3d26ab7c288a43e4bf435f0988a9bbfa
          name: 'Domains on blocklist'
          type: DEPENDENT
          key: pihole.gravity.domains_being_blocked
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.gravity_size
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: environment
        - uuid: 2d38f3cff1ee45f389b13d126b48c3ac
          name: 'Top blocked domain'
          type: DEPENDENT
          key: pihole.gravity.top_blocked
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.top_blocked
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: 5da3d4b61dd94d818c1cfa5dc0ce80a5
          name: 'Top client'
          type: DEPENDENT
          key: pihole.gravity.top_client
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.top_client
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: a480693be7964f6ebf00e5d8aa4aff7f
          name: 'Top domain'
          type: DEPENDENT
          key: pihole.gravity.top_domain
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.top_domain
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: 2e4a019b06bb4188a6166d31a8cf8804
          name: 'Queries blocked'
          type: DEPENDENT
          key: pihole.queries.blocked
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.blocked
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: 556252a7f2ff47a6aa61c63391807eea
          name: 'Queries cached'
          type: DEPENDENT
          key: pihole.queries.cached
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.cached
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: bd7f499cfe784584b90eab28b4574216
          name: 'Queries forwarded'
          type: DEPENDENT
          key: pihole.queries.forwarded
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.forwarded
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: c4a294c81fb0432cb1b3ac5dbbcaad96
          name: 'Queries blocked in %'
          type: DEPENDENT
          key: pihole.queries.pblocked
          delay: '0'
          value_type: FLOAT
          trends: '0'
          units: '%'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.percent_blocked
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
          triggers:
            - uuid: cce30722a8034b968e5c762f920960ef
              expression: 'last(/APP-Pi-hole by HTTP/pihole.queries.pblocked)<15'
              name: 'Low percentage of blocked queries'
              opdata: 'Current blocked queries in %: {ITEM.LASTVALUE1}'
              priority: WARNING
              tags:
                - tag: scope
                  value: security
        - uuid: a0ce3a82673046828688832708551fe3
          name: 'Query reply: BLOB'
          type: DEPENDENT
          key: pihole.queries.replies_blob
          delay: '0'
          trends: '0'
          description: 'Uncategorized replies or internal pi-hole processing'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.BLOB
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: 01c059f7ebb14e30830cefb1669d8396
          name: 'Query reply: CNAME'
          type: DEPENDENT
          key: pihole.queries.replies_cname
          delay: '0'
          trends: '0'
          description: 'Canonical Name. Alias pointing to another A/AAAA record.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.CNAME
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: b7d50996e81042cfb1d69614fa04fae3
          name: 'Query reply: DNSSEC'
          type: DEPENDENT
          key: pihole.queries.replies_dnssec
          delay: '0'
          trends: '0'
          description: 'Replies related to the status of DNS Security Extensions validation for the response'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.DNSSEC
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: 2b5e12684ba64fe290383aa3af5d78b7
          name: 'Query reply: DOMAIN'
          type: DEPENDENT
          key: pihole.queries.replies_domain
          delay: '0'
          trends: '0'
          description: 'The reply contains a domain name as the primary answer (e.g., in responses for NS, MX, CNAME, or PTR queries)'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.DOMAIN
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: 6a325492d66b4d2d92a23d70538624e6
          name: 'Query reply: IP'
          type: DEPENDENT
          key: pihole.queries.replies_ip
          delay: '0'
          trends: '0'
          description: 'The reply contains an IP address (IPv4 or IPv6) as the answer, typically from A or AAAA record queries'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.IP
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: c8a677d867ff4cb0a2c8ba6f25fb23cf
          name: 'Query reply: NODATA'
          type: DEPENDENT
          key: pihole.queries.replies_nodata
          delay: '0'
          trends: '0'
          description: 'Queried type of DNS entry does not exist'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.NODATA
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: deb5bfa965ef41fd83417a648dddea6e
          name: 'Query reply: NONE'
          type: DEPENDENT
          key: pihole.queries.replies_none
          delay: '0'
          trends: '0'
          description: 'A reply code often used in responses to non-standard DNS operations like NOTIFY, rather than typical client queries for resource records'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.NONE
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: 126afbf5522e4cf58db1cde882abf146
          name: 'Query reply: NOTIMP'
          type: DEPENDENT
          key: pihole.queries.replies_notimp
          delay: '0'
          trends: '0'
          description: 'Function not implemented'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.NOTIMP
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
          triggers:
            - uuid: 7eea4e0df89c40bcbe6973ce6a437152
              expression: 'last(/APP-Pi-hole by HTTP/pihole.queries.replies_notimp)>1'
              name: 'NOTIMP DNS replies detected'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'Pi-hole does not implement the requested query type. Check your pi-hole for unexpected queries.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: security
        - uuid: 4c310dadda004a9b81dba547ce0901f7
          name: 'Query reply: NXDOMAIN'
          type: DEPENDENT
          key: pihole.queries.replies_nxdomain
          delay: '0'
          trends: '0'
          description: 'Domain name does not exist'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.NXDOMAIN
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: ee8ed54b59ff47c3862e4e9aaebe8bc5
          name: 'Query reply: OTHER'
          type: DEPENDENT
          key: pihole.queries.replies_other
          delay: '0'
          trends: '0'
          description: 'A catch-all category for other types of DNS replies that are not specifically categorized in the Pi-hole statistics list'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.OTHER
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: 564750ae9b5d46eba3540a5038486fb3
          name: 'Query reply: REFUSED'
          type: DEPENDENT
          key: pihole.queries.replies_refused
          delay: '0'
          trends: '0'
          description: 'The server refused to answer for the query'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.REFUSED
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
          triggers:
            - uuid: ea50d50edea744b9884c834aa5b20d0c
              expression: 'last(/APP-Pi-hole by HTTP/pihole.queries.replies_refused)>1'
              name: 'REFUSED DNS replies detected'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'DNS request refused. Check your pi-hole configuration and for unexpected requests.'
              tags:
                - tag: scope
                  value: security
        - uuid: 7e8413adb18b43c9bc3f2561793e870a
          name: 'Query reply: RRNAME'
          type: DEPENDENT
          key: pihole.queries.replies_rrname
          delay: '0'
          trends: '0'
          description: 'Resource Record Name. Likely related to replies where the significant part of the answer is the name of a resource record itself (e.g., the name of an NS server)'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.RRNAME
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
        - uuid: a2b35ecacca64454aca83473d5aee060
          name: 'Query reply: SERVFAIL'
          type: DEPENDENT
          key: pihole.queries.replies_servfail
          delay: '0'
          trends: '0'
          description: 'Server failed to complete the DNS request'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.SERVFAIL
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
          triggers:
            - uuid: b3691acc409b49fd8d6b3029cb67901b
              expression: 'last(/APP-Pi-hole by HTTP/pihole.queries.replies_servfail)>1'
              name: 'SERVFAIL DNS replies detected'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'DNS request failed. Check your pi-hole and upstream configuration.'
              tags:
                - tag: scope
                  value: availability
        - uuid: c767e44309914d9a81a072d603e3b4f6
          name: 'Query reply: UNKNOWN'
          type: DEPENDENT
          key: pihole.queries.replies_unknown
          delay: '0'
          trends: '0'
          description: 'The type of reply received from the upstream DNS server was not recognized or understood by Pi-hole'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.replies.UNKNOWN
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-replies
          triggers:
            - uuid: e978baacd91c40db862103459134e2da
              expression: 'last(/APP-Pi-hole by HTTP/pihole.queries.replies_unknown)>1'
              name: 'UNKNOWN DNS replies detected'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'The response type was not recognized by the Pi-hole. This is unusual and may indicate problems or strange traffic.'
              tags:
                - tag: scope
                  value: security
        - uuid: c840be865a174394b5858fc2c67cf69c
          name: 'Total queries'
          type: DEPENDENT
          key: pihole.queries.total
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.total
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: scope
              value: stats
        - uuid: 78d401357e5643519eca0b8dbb81a20c
          name: 'Query type: A'
          type: DEPENDENT
          key: pihole.queries.type_a
          delay: '0'
          trends: '0'
          description: 'Address record. Requests the IPv4 address associated with a domain name'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.A
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 90bf7a87fb5043a38abb315dd1e90633
          name: 'Query type: AAAA'
          type: DEPENDENT
          key: pihole.queries.type_aaaa
          delay: '0'
          trends: '0'
          description: 'IPv6 Address record. Requests the IPv6 address associated with a domain name'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.AAAA
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 59aa6fd35baf4dfabb7338c06c0ae5a4
          name: 'Query type: ANY'
          type: DEPENDENT
          key: pihole.queries.type_any
          delay: '0'
          trends: '0'
          description: 'Requests all resource record types for a given domain name. Often used for diagnostic purposes, but can cause large responses'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.ANY
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: e68a1ba9576449a3b79c1fd772434537
          name: 'Query type: DNSKEY'
          type: DEPENDENT
          key: pihole.queries.type_dnskey
          delay: '0'
          trends: '0'
          description: 'DNS Key record. Used in DNSSEC; contains a public signing key for a zone.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.DNSKEY
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 818533d0133540b6a7bbb63700830e7d
          name: 'Query type: DS'
          type: DEPENDENT
          key: pihole.queries.type_ds
          delay: '0'
          trends: '0'
          description: 'Delegation Signer record. Used in DNSSEC; links a parent zone to a child zone''s DNSKEY to build a chain of trust.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.DS
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 8e0323212a5c4708acf73a1a55f17386
          name: 'Query type: HTTPS'
          type: DEPENDENT
          key: pihole.queries.type_https
          delay: '0'
          trends: '0'
          description: 'A new record type used to discover alternative HTTPS endpoints and parameters for a service, improving connection performance and privacy.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.HTTPS
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 23ca3036923149179e84a7769c333ce8
          name: 'Query type: MX'
          type: DEPENDENT
          key: pihole.queries.type_mx
          delay: '0'
          trends: '0'
          description: 'Mail Exchanger record. Requests the domain names of the mail servers responsible for receiving email sent to a specific domain'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.MX
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 3b90913e28c343a885f85bcf3bc1d0cb
          name: 'Query type: NAPTR'
          type: DEPENDENT
          key: pihole.queries.type_naptr
          delay: '0'
          trends: '0'
          description: 'Naming Authority Pointer record. Used for mapping and rewriting, often in applications like IP telephony (ENUM).'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.NAPTR
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 562cbb08830449588813457679674b63
          name: 'Query type: NS'
          type: DEPENDENT
          key: pihole.queries.type_ns
          delay: '0'
          trends: '0'
          description: 'Name Server record. Requests the domain names of the authoritative DNS servers for a specific domain or subdomain.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.NS
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: a9715315447a42588428fae859da3fb6
          name: 'Query type: OTHER'
          type: DEPENDENT
          key: pihole.queries.type_other
          delay: '0'
          trends: '0'
          description: 'A category for query types that are less common or not specifically listed elsewhere in the statistics.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.OTHER
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 20eca8a7f2b14640bf4a10d3798c138b
          name: 'Query type: PTR'
          type: DEPENDENT
          key: pihole.queries.type_ptr
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.PTR
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: ce4545a7683e47fdbf5d4910aa6e40b6
          name: 'Query type: RRSIG'
          type: DEPENDENT
          key: pihole.queries.type_rrsig
          delay: '0'
          trends: '0'
          description: 'Resource Record Signature record. Used in DNSSEC; contains a digital signature for a record set to verify its authenticity.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.RRSIG
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 625366f404b3426895e875b8dff86edb
          name: 'Query type: SOA'
          type: DEPENDENT
          key: pihole.queries.type_soa
          delay: '0'
          trends: '0'
          description: 'Start of Authority record. Contains administrative information about a DNS zone, like the primary name server, zone administrator''s email, and zone version serial number.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.SOA
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: d62518984bce4da4b61b8ab3a9c1918f
          name: 'Query type: SRV'
          type: DEPENDENT
          key: pihole.queries.type_srv
          delay: '0'
          trends: '0'
          description: 'Service record. Specifies the location (hostname and port) of servers for a specific service'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.SRV
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 0dbb40ea24fa402790dc150d0705a488
          name: 'Query type: SVCB'
          type: DEPENDENT
          key: pihole.queries.type_svcb
          delay: '0'
          trends: '0'
          description: 'Service Binding record. A new record type (related to HTTPS records) used to discover alternative network locations and protocols for accessing a service.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.SVCB
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 80b1ded4f7e34c83be10e0d1efd6a6df
          name: 'Query type: TXT'
          type: DEPENDENT
          key: pihole.queries.type_txt
          delay: '0'
          trends: '0'
          description: 'Text record. Contains arbitrary text strings, often used for verification purposes or storing small pieces of data (e.g., SPF records, DKIM records, domain verification tokens).'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.types.TXT
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: targetvalue
              value: dns-queries
        - uuid: 77a86d9d18004673ae18ef5ad99f7724
          name: 'Unique domains'
          type: DEPENDENT
          key: pihole.queries.unique_domains
          delay: '0'
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.summary.queries.unique_domains
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: environment
        - uuid: 55ae162bc7684c719a0cf6df5f437cf3
          name: 'Blocking status'
          type: DEPENDENT
          key: pihole.status.blocking
          delay: '0'
          value_type: TEXT
          trends: '0'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.blocking
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: dns
            - tag: component
              value: health
          triggers:
            - uuid: a0feaf55fc1945e48ef18414de7df542
              expression: 'last(/APP-Pi-hole by HTTP/pihole.status.blocking)<>"enabled" and length(last(/APP-Pi-hole by HTTP/pihole.status.blocking))>0'
              name: 'Blocking is disabled'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'You should use the blocking functionality to enhance your security by DNS based blocking.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: security
        - uuid: 444d2380b9534cccac26812f89d4db4b
          name: 'CPU temperature'
          type: DEPENDENT
          key: pihole.system.cpu.temp
          delay: '0'
          trends: '0'
          units: C
          preprocessing:
            - type: CHECK_NOT_SUPPORTED
              parameters:
                - '-1'
            - type: JSONPATH
              parameters:
                - $.data.padd.sensors.cpu_temp
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: cpu
            - tag: component
              value: health
        - uuid: 33ed5399a31f4120a454e478fa35c4fb
          name: 'CPU utilization'
          type: DEPENDENT
          key: pihole.system.cpu.util
          delay: '0'
          trends: '0'
          units: '%'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data.padd.system.cpu[''%cpu'']'
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: cpu
            - tag: scope
              value: performance
          triggers:
            - uuid: 150821a21b094a7cbad01dbeb90bc14d
              expression: 'min(/APP-Pi-hole by HTTP/pihole.system.cpu.util,5m)>{$PIHOLE.SYSTEM.CPU.MAX.WARN}'
              name: 'High CPU usage'
              event_name: 'High CPU usage (over {$PIHOLE.SYSTEM.CPU.MAX.WARN}% use)'
              opdata: 'Current use: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'CPU usage.'
              tags:
                - tag: scope
                  value: performance
        - uuid: f1786582f2844d1197da9ebe3ba91980
          name: 'Host name of Pi-hole node'
          type: DEPENDENT
          key: pihole.system.node_name
          delay: '0'
          value_type: TEXT
          trends: '0'
          inventory_link: NAME
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.node_name
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
        - uuid: 59a46cf598e8470a84bc79a9ec554e76
          name: 'Available memory'
          type: DEPENDENT
          key: pihole.system.ram.available
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.ram.available
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
        - uuid: 286ae24c68674325a43ff8825dae070a
          name: 'Free memory'
          type: DEPENDENT
          key: pihole.system.ram.free
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.ram.free
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
        - uuid: 0d6d8fe936b74f8ba85991df2704d202
          name: 'Used memory in %'
          type: DEPENDENT
          key: pihole.system.ram.pused
          delay: '0'
          value_type: FLOAT
          trends: '0'
          units: '%'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data.padd.system.memory.ram[''%used'']'
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
            - tag: scope
              value: performance
          triggers:
            - uuid: 4327050a1f16442694e812d6209b8cef
              expression: 'min(/APP-Pi-hole by HTTP/pihole.system.ram.pused,5m)>{$PIHOLE.SYSTEM.MEMORY.MAX.WARN}'
              name: 'High memory utilization'
              event_name: 'High memory usage (over {$PIHOLE.SYSTEM.MEMORY.MAX.WARN}% use)'
              opdata: 'Current use: {ITEM.LASTVALUE1}'
              priority: WARNING
              tags:
                - tag: scope
                  value: performance
        - uuid: ed9d072f98ac448f8dc5f71f79f9d5ae
          name: 'Total memory'
          type: DEPENDENT
          key: pihole.system.ram.total
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.ram.total
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
        - uuid: 9d9b194d101c44e4b6f1b3dafbb2768d
          name: 'Used memory'
          type: DEPENDENT
          key: pihole.system.ram.used
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.ram.used
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
        - uuid: 44ed21bd257341cabb9633342debc7fb
          name: 'Free swap'
          type: DEPENDENT
          key: pihole.system.swap.free
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.swap.free
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
            - tag: component
              value: storage
        - uuid: de49ac1fff04408786fed6f9ca33c4ff
          name: 'Used swap in %'
          type: DEPENDENT
          key: pihole.system.swap.pused
          delay: '0'
          value_type: FLOAT
          trends: '0'
          units: '%'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data.padd.system.memory.swap[''%used'']'
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
            - tag: component
              value: storage
            - tag: scope
              value: performance
          triggers:
            - uuid: d5e9990c06a0475a9f9340a4d7eea7d9
              expression: 'min(/APP-Pi-hole by HTTP/pihole.system.swap.pused,5)>{$PIHOLE.SYSTEM.SWAP.MAX.WARN}'
              name: 'High swap utilization'
              event_name: 'High swap usage (over {$PIHOLE.SYSTEM.SWAP.MAX.WARN}% use)'
              opdata: 'Current use: {ITEM.LASTVALUE1}'
              priority: WARNING
              tags:
                - tag: scope
                  value: performance
        - uuid: fe57befeb0534216b9ee44a54fc4def2
          name: 'Total swap'
          type: DEPENDENT
          key: pihole.system.swap.total
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.swap.total
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
            - tag: component
              value: storage
        - uuid: 89701c1480594d0a862db2ba5daa5981
          name: 'Used swap'
          type: DEPENDENT
          key: pihole.system.swap.used
          delay: '0'
          trends: '0'
          units: B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.memory.swap.used
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: memory
            - tag: component
              value: storage
        - uuid: 5abfe5bb173f42b4be9d045c4239495d
          name: Uptime
          type: DEPENDENT
          key: pihole.system.uptime
          delay: '0'
          trends: '0'
          units: s
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.system.uptime
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
        - uuid: 8d33a9f85a424089812150825e8a451a
          name: 'Version Core'
          type: DEPENDENT
          key: pihole.version.core
          delay: '0'
          value_type: TEXT
          trends: '0'
          inventory_link: SOFTWARE_APP_A
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.version.core.local.version
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: e8a2461d76414606bf0c8c26e47c93c6
              expression: 'last(/APP-Pi-hole by HTTP/pihole.version.core,#1)<>last(/APP-Pi-hole by HTTP/pihole.version.core,#2) and length(last(/APP-Pi-hole by HTTP/pihole.version.core))>0'
              name: 'Core Version has changed'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: INFO
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
        - uuid: 2bcf26992b3a44f6a4b3e2c889654276
          name: 'Version Docker'
          type: DEPENDENT
          key: pihole.version.docker
          delay: '0'
          value_type: TEXT
          trends: '0'
          inventory_link: SOFTWARE_APP_D
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.version.web.local.version
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: ac11f9e37c6b4b82a58b47e14d9e769c
              expression: 'last(/APP-Pi-hole by HTTP/pihole.version.docker,#1)<>last(/APP-Pi-hole by HTTP/pihole.version.docker,#2) and length(last(/APP-Pi-hole by HTTP/pihole.version.docker))>0'
              name: 'Docker Version has changed'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: INFO
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
        - uuid: eeba600c68334be0aeadd9466f8a4f9e
          name: 'Version FTL'
          type: DEPENDENT
          key: pihole.version.ftl
          delay: '0'
          value_type: TEXT
          trends: '0'
          inventory_link: SOFTWARE_APP_B
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.version.ftl.local.version
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: 55ad14dbd22e439aab633e1f8f2f7cd4
              expression: 'last(/APP-Pi-hole by HTTP/pihole.version.ftl,#1)<>last(/APP-Pi-hole by HTTP/pihole.version.ftl,#2) and length(last(/APP-Pi-hole by HTTP/pihole.version.ftl))>0'
              name: 'FTL Version has changed'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: INFO
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
        - uuid: 95300d09f3634ea9a1d7e27fe48ab060
          name: 'Version Web'
          type: DEPENDENT
          key: pihole.version.web
          delay: '0'
          value_type: TEXT
          trends: '0'
          inventory_link: SOFTWARE_APP_C
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data.padd.version.web.local.version
          master_item:
            key: pihole.get.metrics
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: ba2b2a7a2aef4b68afe083787785da46
              expression: 'last(/APP-Pi-hole by HTTP/pihole.version.web,#1)<>last(/APP-Pi-hole by HTTP/pihole.version.web,#2) and length(last(/APP-Pi-hole by HTTP/pihole.version.web))>0'
              name: 'Web Version has changed'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: INFO
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
      tags:
        - tag: application
          value: pihole
        - tag: class
          value: software
        - tag: target
          value: dns
      macros:
        - macro: '{$PIHOLE.API.URL}'
          description: 'The Pihole API endpoint is a URL in the format `<scheme>://<host/fqdn>:<port>/api`.'
        - macro: '{$PIHOLE.PASSWORD}'
          description: 'The `password` of the Pihole webinterface.'
        - macro: '{$PIHOLE.SYSTEM.CPU.MAX.WARN}'
          value: '90'
          description: 'Default: 90'
        - macro: '{$PIHOLE.SYSTEM.MEMORY.MAX.WARN}'
          value: '90'
          description: 'Default: 90'
        - macro: '{$PIHOLE.SYSTEM.SWAP.MAX.WARN}'
          value: '90'
          description: 'Default: 90'
      dashboards:
        - uuid: c64a9121cdd84d1a9a68969477c14397
          name: Pi-hole
          pages:
            - name: Statistics
              widgets:
                - type: item
                  name: 'Total Queries'
                  width: '18'
                  height: '3'
                  fields:
                    - type: STRING
                      name: bg_color
                      value: 0288D1
                    - type: INTEGER
                      name: decimal_places
                      value: '0'
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.queries.total
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: piechart
                  name: 'DNS Query Types'
                  'y': '3'
                  width: '24'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: draw_type
                      value: '1'
                    - type: STRING
                      name: ds.0.color
                      value: FF465C
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Query type: AAAA'
                    - type: STRING
                      name: ds.1.color
                      value: FFD54F
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Query type: ANY'
                    - type: STRING
                      name: ds.2.color
                      value: 0EC9AC
                    - type: STRING
                      name: ds.2.items.0
                      value: 'Query type: A'
                    - type: STRING
                      name: ds.3.color
                      value: 524BBC
                    - type: STRING
                      name: ds.3.items.0
                      value: 'Query type: DNSKEY'
                    - type: STRING
                      name: ds.4.color
                      value: ED1248
                    - type: STRING
                      name: ds.4.items.0
                      value: 'Query type: DS'
                    - type: STRING
                      name: ds.5.color
                      value: D1E754
                    - type: STRING
                      name: ds.5.items.0
                      value: 'Query type: HTTPS'
                    - type: STRING
                      name: ds.6.color
                      value: 2AB5FF
                    - type: STRING
                      name: ds.6.items.0
                      value: 'Query type: PTR'
                    - type: STRING
                      name: ds.7.color
                      value: 385CC7
                    - type: STRING
                      name: ds.7.items.0
                      value: 'Query type: RRSIG'
                    - type: STRING
                      name: ds.8.color
                      value: EC1594
                    - type: STRING
                      name: ds.8.items.0
                      value: 'Query type: SOA'
                    - type: STRING
                      name: ds.9.color
                      value: BAE37D
                    - type: STRING
                      name: ds.9.items.0
                      value: 'Query type: SRV'
                    - type: STRING
                      name: ds.10.color
                      value: 6AC8FF
                    - type: STRING
                      name: ds.10.items.0
                      value: 'Query type: SVCB'
                    - type: STRING
                      name: ds.11.color
                      value: EE2B29
                    - type: STRING
                      name: ds.11.items.0
                      value: 'Query type: TXT'
                - type: piechart
                  name: 'DNS Query Replies'
                  'y': '8'
                  width: '24'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: draw_type
                      value: '1'
                    - type: STRING
                      name: ds.0.color
                      value: FF465C
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Query reply: BLOB'
                    - type: STRING
                      name: ds.1.color
                      value: FFD54F
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Query reply: CNAME'
                    - type: STRING
                      name: ds.2.color
                      value: 0EC9AC
                    - type: STRING
                      name: ds.2.items.0
                      value: 'Query reply: DNSSEC'
                    - type: STRING
                      name: ds.3.color
                      value: 524BBC
                    - type: STRING
                      name: ds.3.items.0
                      value: 'Query reply: DOMAIN'
                    - type: STRING
                      name: ds.4.color
                      value: ED1248
                    - type: STRING
                      name: ds.4.items.0
                      value: 'Query reply: IP'
                    - type: STRING
                      name: ds.5.color
                      value: D1E754
                    - type: STRING
                      name: ds.5.items.0
                      value: 'Query reply: NODATA'
                    - type: STRING
                      name: ds.6.color
                      value: 2AB5FF
                    - type: STRING
                      name: ds.6.items.0
                      value: 'Query reply: NONE'
                    - type: STRING
                      name: ds.7.color
                      value: 385CC7
                    - type: STRING
                      name: ds.7.items.0
                      value: 'Query reply: NOTIMP'
                    - type: STRING
                      name: ds.8.color
                      value: EC1594
                    - type: STRING
                      name: ds.8.items.0
                      value: 'Query reply: NXDOMAIN'
                    - type: STRING
                      name: ds.9.color
                      value: BAE37D
                    - type: STRING
                      name: ds.9.items.0
                      value: 'Query reply: OTHER'
                    - type: STRING
                      name: ds.10.color
                      value: 6AC8FF
                    - type: STRING
                      name: ds.10.items.0
                      value: 'Query reply: REFUSED'
                    - type: STRING
                      name: ds.11.color
                      value: EE2B29
                    - type: STRING
                      name: ds.11.items.0
                      value: 'Query reply: RRNAME'
                    - type: STRING
                      name: ds.12.color
                      value: 3CA20D
                    - type: STRING
                      name: ds.12.items.0
                      value: 'Query reply: SERVFAIL'
                    - type: STRING
                      name: ds.13.color
                      value: 6F4BBC
                    - type: STRING
                      name: ds.13.items.0
                      value: 'Query reply: UNKNOWN'
                - type: item
                  name: 'Queries blocked'
                  x: '18'
                  width: '18'
                  height: '3'
                  fields:
                    - type: STRING
                      name: bg_color
                      value: B71C1C
                    - type: INTEGER
                      name: decimal_places
                      value: '0'
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.queries.blocked
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: item
                  name: 'Active clients'
                  x: '24'
                  'y': '3'
                  width: '12'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.clients.active
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: svggraph
                  name: 'Queries last 24h'
                  x: '24'
                  'y': '6'
                  width: '48'
                  height: '7'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: FF465C
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Queries blocked'
                    - type: STRING
                      name: ds.1.color
                      value: 0040FF
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Total Queries'
                    - type: STRING
                      name: ds.2.color
                      value: 00FF00
                    - type: STRING
                      name: ds.2.items.0
                      value: 'Queries Cached'
                    - type: STRING
                      name: ds.3.color
                      value: FFD54F
                    - type: STRING
                      name: ds.3.items.0
                      value: 'Queries Forwarded'
                    - type: STRING
                      name: reference
                      value: HHEBH
                    - type: INTEGER
                      name: righty
                      value: '0'
                    - type: STRING
                      name: time_period.from
                      value: now-24h
                    - type: STRING
                      name: time_period.to
                      value: now
                - type: item
                  name: 'Queries blocked in %'
                  x: '36'
                  width: '18'
                  height: '3'
                  fields:
                    - type: STRING
                      name: bg_color
                      value: FFBF00
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.queries.pblocked
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: item
                  name: 'Top client'
                  x: '36'
                  'y': '3'
                  width: '18'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.gravity.top_client
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: item
                  name: 'Domains on blocklist'
                  x: '54'
                  width: '18'
                  height: '3'
                  fields:
                    - type: STRING
                      name: bg_color
                      value: 2E7D32
                    - type: INTEGER
                      name: decimal_places
                      value: '0'
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.gravity.domains_being_blocked
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                - type: item
                  name: 'Top blocked domain'
                  x: '54'
                  'y': '3'
                  width: '18'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.gravity.top_blocked
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
            - name: System
              widgets:
                - type: gauge
                  width: '24'
                  height: '4'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.system.cpu.util
                    - type: STRING
                      name: max
                      value: '100'
                    - type: STRING
                      name: min
                      value: '0'
                    - type: STRING
                      name: thresholds.0.color
                      value: 0EC9AC
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: FFD54F
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '70'
                    - type: STRING
                      name: thresholds.2.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '85'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
                - type: honeycomb
                  name: 'System overview'
                  'y': '4'
                  width: '36'
                  height: '8'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Version Core'
                    - type: STRING
                      name: items.1
                      value: 'Version Docker'
                    - type: STRING
                      name: items.2
                      value: 'Version FTL'
                    - type: STRING
                      name: items.3
                      value: 'Version Web'
                    - type: STRING
                      name: items.4
                      value: 'Active clients'
                    - type: STRING
                      name: items.5
                      value: 'Available memory'
                    - type: STRING
                      name: items.6
                      value: 'Blocking status'
                    - type: STRING
                      name: items.7
                      value: 'CPU temperature'
                    - type: STRING
                      name: items.8
                      value: 'CPU utilization'
                    - type: STRING
                      name: items.9
                      value: 'DHCP status'
                    - type: STRING
                      name: items.10
                      value: 'DNSSEC status'
                    - type: STRING
                      name: items.11
                      value: 'Domains on blocklist'
                    - type: STRING
                      name: items.12
                      value: 'Free memory'
                    - type: STRING
                      name: items.13
                      value: 'Free swap'
                    - type: STRING
                      name: items.14
                      value: 'Get errors'
                    - type: STRING
                      name: items.15
                      value: 'Get metrics'
                    - type: STRING
                      name: items.16
                      value: 'Host name of Pi-hole node'
                    - type: STRING
                      name: items.17
                      value: 'Queries blocked'
                    - type: STRING
                      name: items.18
                      value: 'Queries blocked in %'
                    - type: STRING
                      name: items.19
                      value: 'Queries cached'
                    - type: STRING
                      name: items.20
                      value: 'Queries forwarded'
                    - type: STRING
                      name: items.21
                      value: 'Query reply: BLOB'
                    - type: STRING
                      name: items.22
                      value: 'Query reply: CNAME'
                    - type: STRING
                      name: items.23
                      value: 'Query reply: DNSSEC'
                    - type: STRING
                      name: items.24
                      value: 'Query reply: DOMAIN'
                    - type: STRING
                      name: items.25
                      value: 'Query reply: IP'
                    - type: STRING
                      name: items.26
                      value: 'Query reply: NODATA'
                    - type: STRING
                      name: items.27
                      value: 'Query reply: NONE'
                    - type: STRING
                      name: items.28
                      value: 'Query reply: NOTIMP'
                    - type: STRING
                      name: items.29
                      value: 'Query reply: NXDOMAIN'
                    - type: STRING
                      name: items.30
                      value: 'Query reply: OTHER'
                    - type: STRING
                      name: items.31
                      value: 'Query reply: REFUSED'
                    - type: STRING
                      name: items.32
                      value: 'Query reply: RRNAME'
                    - type: STRING
                      name: items.33
                      value: 'Query reply: SERVFAIL'
                    - type: STRING
                      name: items.34
                      value: 'Query reply: UNKNOWN'
                    - type: STRING
                      name: items.35
                      value: 'Query type: A'
                    - type: STRING
                      name: items.36
                      value: 'Query type: AAAA'
                    - type: STRING
                      name: items.37
                      value: 'Query type: ANY'
                    - type: STRING
                      name: items.38
                      value: 'Query type: DNSKEY'
                    - type: STRING
                      name: items.39
                      value: 'Query type: DS'
                    - type: STRING
                      name: items.40
                      value: 'Query type: HTTPS'
                    - type: STRING
                      name: items.41
                      value: 'Query type: MX'
                    - type: STRING
                      name: items.42
                      value: 'Query type: NAPTR'
                    - type: STRING
                      name: items.43
                      value: 'Query type: NS'
                    - type: STRING
                      name: items.44
                      value: 'Query type: OTHER'
                    - type: STRING
                      name: items.45
                      value: 'Query type: PTR'
                    - type: STRING
                      name: items.46
                      value: 'Query type: RRSIG'
                    - type: STRING
                      name: items.47
                      value: 'Query type: SOA'
                    - type: STRING
                      name: items.48
                      value: 'Query type: SRV'
                    - type: STRING
                      name: items.49
                      value: 'Query type: SVCB'
                    - type: STRING
                      name: items.50
                      value: 'Query type: TXT'
                    - type: STRING
                      name: items.51
                      value: 'Top blocked domain'
                    - type: STRING
                      name: items.52
                      value: 'Top client'
                    - type: STRING
                      name: items.53
                      value: 'Top domain'
                    - type: STRING
                      name: items.54
                      value: 'Total clients'
                    - type: STRING
                      name: items.55
                      value: 'Total memory'
                    - type: STRING
                      name: items.56
                      value: 'Total queries'
                    - type: STRING
                      name: items.57
                      value: 'Total swap'
                    - type: STRING
                      name: items.58
                      value: 'Unique domains'
                    - type: STRING
                      name: items.59
                      value: Uptime
                    - type: STRING
                      name: items.60
                      value: 'Used memory'
                    - type: STRING
                      name: items.61
                      value: 'Used memory in %'
                    - type: STRING
                      name: items.62
                      value: 'Used swap'
                    - type: STRING
                      name: items.63
                      value: 'Used swap in %'
                    - type: STRING
                      name: items.64
                      value: 'Get message serverity'
                    - type: INTEGER
                      name: item_tags.0.operator
                      value: '0'
                    - type: STRING
                      name: item_tags.0.tag
                      value: component
                    - type: STRING
                      name: item_tags.0.value
                      value: system
                    - type: INTEGER
                      name: maintenance
                      value: '1'
                    - type: STRING
                      name: primary_label
                      value: '{ITEM.NAME}'
                    - type: STRING
                      name: reference
                      value: RKTNN
                - type: gauge
                  x: '24'
                  width: '24'
                  height: '4'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.system.ram.pused
                    - type: STRING
                      name: max
                      value: '100'
                    - type: STRING
                      name: min
                      value: '0'
                    - type: STRING
                      name: thresholds.0.color
                      value: 0EC9AC
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: FFD54F
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '70'
                    - type: STRING
                      name: thresholds.2.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '85'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
                - type: honeycomb
                  name: 'System health'
                  x: '36'
                  'y': '4'
                  width: '36'
                  height: '8'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Active clients'
                    - type: STRING
                      name: items.1
                      value: 'Available memory'
                    - type: STRING
                      name: items.2
                      value: 'Blocking status'
                    - type: STRING
                      name: items.3
                      value: 'CPU temperature'
                    - type: STRING
                      name: items.4
                      value: 'CPU utilization'
                    - type: STRING
                      name: items.5
                      value: 'DHCP status'
                    - type: STRING
                      name: items.6
                      value: 'DNSSEC status'
                    - type: STRING
                      name: items.7
                      value: 'Domains on blocklist'
                    - type: STRING
                      name: items.8
                      value: 'Free memory'
                    - type: STRING
                      name: items.9
                      value: 'Free swap'
                    - type: STRING
                      name: items.10
                      value: 'Get errors'
                    - type: STRING
                      name: items.11
                      value: 'Get metrics'
                    - type: STRING
                      name: items.12
                      value: 'Host name of Pi-hole node'
                    - type: STRING
                      name: items.13
                      value: 'Queries blocked'
                    - type: STRING
                      name: items.14
                      value: 'Queries blocked in %'
                    - type: STRING
                      name: items.15
                      value: 'Queries cached'
                    - type: STRING
                      name: items.16
                      value: 'Queries forwarded'
                    - type: STRING
                      name: items.17
                      value: 'Query reply: BLOB'
                    - type: STRING
                      name: items.18
                      value: 'Query reply: CNAME'
                    - type: STRING
                      name: items.19
                      value: 'Query reply: DNSSEC'
                    - type: STRING
                      name: items.20
                      value: 'Query reply: DOMAIN'
                    - type: STRING
                      name: items.21
                      value: 'Query reply: IP'
                    - type: STRING
                      name: items.22
                      value: 'Query reply: NODATA'
                    - type: STRING
                      name: items.23
                      value: 'Query reply: NONE'
                    - type: STRING
                      name: items.24
                      value: 'Query reply: NOTIMP'
                    - type: STRING
                      name: items.25
                      value: 'Query reply: NXDOMAIN'
                    - type: STRING
                      name: items.26
                      value: 'Query reply: OTHER'
                    - type: STRING
                      name: items.27
                      value: 'Query reply: REFUSED'
                    - type: STRING
                      name: items.28
                      value: 'Query reply: RRNAME'
                    - type: STRING
                      name: items.29
                      value: 'Query reply: SERVFAIL'
                    - type: STRING
                      name: items.30
                      value: 'Query reply: UNKNOWN'
                    - type: STRING
                      name: items.31
                      value: 'Query type: A'
                    - type: STRING
                      name: items.32
                      value: 'Query type: AAAA'
                    - type: STRING
                      name: items.33
                      value: 'Query type: ANY'
                    - type: STRING
                      name: items.34
                      value: 'Query type: DNSKEY'
                    - type: STRING
                      name: items.35
                      value: 'Query type: DS'
                    - type: STRING
                      name: items.36
                      value: 'Query type: HTTPS'
                    - type: STRING
                      name: items.37
                      value: 'Query type: MX'
                    - type: STRING
                      name: items.38
                      value: 'Query type: NAPTR'
                    - type: STRING
                      name: items.39
                      value: 'Query type: NS'
                    - type: STRING
                      name: items.40
                      value: 'Query type: OTHER'
                    - type: STRING
                      name: items.41
                      value: 'Query type: PTR'
                    - type: STRING
                      name: items.42
                      value: 'Query type: RRSIG'
                    - type: STRING
                      name: items.43
                      value: 'Query type: SOA'
                    - type: STRING
                      name: items.44
                      value: 'Query type: SRV'
                    - type: STRING
                      name: items.45
                      value: 'Query type: SVCB'
                    - type: STRING
                      name: items.46
                      value: 'Query type: TXT'
                    - type: STRING
                      name: items.47
                      value: 'Top blocked domain'
                    - type: STRING
                      name: items.48
                      value: 'Top client'
                    - type: STRING
                      name: items.49
                      value: 'Top domain'
                    - type: STRING
                      name: items.50
                      value: 'Total clients'
                    - type: STRING
                      name: items.51
                      value: 'Total memory'
                    - type: STRING
                      name: items.52
                      value: 'Total queries'
                    - type: STRING
                      name: items.53
                      value: 'Total swap'
                    - type: STRING
                      name: items.54
                      value: 'Unique domains'
                    - type: STRING
                      name: items.55
                      value: Uptime
                    - type: STRING
                      name: items.56
                      value: 'Used memory'
                    - type: STRING
                      name: items.57
                      value: 'Used memory in %'
                    - type: STRING
                      name: items.58
                      value: 'Used swap'
                    - type: STRING
                      name: items.59
                      value: 'Used swap in %'
                    - type: STRING
                      name: items.60
                      value: 'Version Core'
                    - type: STRING
                      name: items.61
                      value: 'Version Docker'
                    - type: STRING
                      name: items.62
                      value: 'Version FTL'
                    - type: STRING
                      name: items.63
                      value: 'Version Web'
                    - type: STRING
                      name: items.64
                      value: 'Get message serverity'
                    - type: INTEGER
                      name: item_tags.0.operator
                      value: '0'
                    - type: STRING
                      name: item_tags.0.tag
                      value: component
                    - type: STRING
                      name: item_tags.0.value
                      value: health
                    - type: STRING
                      name: primary_label
                      value: '{ITEM.NAME}'
                    - type: STRING
                      name: reference
                      value: PALGM
                - type: gauge
                  x: '48'
                  width: '24'
                  height: '4'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'APP-Pi-hole by HTTP'
                        key: pihole.system.swap.pused
                    - type: STRING
                      name: max
                      value: '100'
                    - type: STRING
                      name: min
                      value: '0'
                    - type: STRING
                      name: thresholds.0.color
                      value: 0EC9AC
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: FFD54F
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '70'
                    - type: STRING
                      name: thresholds.2.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '85'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
      valuemaps:
        - uuid: 2e7575a540974f26ae2b474cef4359e7
          name: 'Message severity'
          mappings:
            - value: '1'
              newvalue: Warning
            - value: '2'
              newvalue: Error
            - value: '0'
              newvalue: 'No error'
  triggers:
    - uuid: eca830be7b1f4b5299b0383edfe76081
      expression: 'rate(/APP-Pi-hole by HTTP/pihole.queries.total,5m)>1 and (rate(/APP-Pi-hole by HTTP/pihole.queries.replies_nodata,1h)/rate(/APP-Pi-hole by HTTP/pihole.queries.total,1h)) > 0.6'
      name: 'Unusual high NODATA rate'
      opdata: 'Current value: {ITEM.LASTVALUE1}'
      priority: HIGH
      description: |
        Reason:
        Unusually high rate of NOTDATA DNS replies. This means, the domain name exists but the specific type of record requested by the client does not exist for that domain.
        
        Resolution:
        - Check the Query Log (Filter replies of type NODATA)
        - Identify Clients
        - Analyze the Queries
        - Investigate the Cause:
           - old configuration
           - unusual behaviour of client or application
      tags:
        - tag: scope
          value: security
    - uuid: 0837596e26fc4eb894ff8f54e7eb3df5
      expression: 'rate(/APP-Pi-hole by HTTP/pihole.queries.total,5m)>1 and (rate(/APP-Pi-hole by HTTP/pihole.queries.replies_nxdomain,15m)/rate(/APP-Pi-hole by HTTP/pihole.queries.total,15m)) > 0.6'
      name: 'Unusual high NXDOMAIN rate'
      opdata: 'Current value: {ITEM.LASTVALUE1}'
      priority: HIGH
      description: |
        Reason for the Trigger:
        
        This trigger fires when your Pi-hole is experiencing both high query volume (over 1 query/sec) AND a high percentage (over 60%) of those queries are resulting in "Domain Does Not Exist" (NXDOMAIN) replies. This combination is often a sign of unusual client behavior, like a device repeatedly trying to resolve many non-existent domain names.
        
        Resolution:
        
        Check Pi-hole Dashboard: 
        Look at the overall query rate and blocked percentage for spikes.
        
        Identify Top Clients: 
        Go to the "Top Clients" list in the Pi-hole web interface to see which specific client(s) are generating the highest number of queries and blocked responses.
        
        Analyze Queries in the Log: 
        Use the "Query Log" and filter by the identified client(s) to see exactly what domains they are querying that result in NXDOMAIN. Look for repetitive patterns or suspicious domain names.
      tags:
        - tag: scope
          value: security
  graphs:
    - uuid: d4bce8f6795e41c88c57333e9c9d5dfc
      name: Memory
      graph_items:
        - color: 199C0D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.ram.available
        - sortorder: '1'
          color: F63100
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.ram.free
        - sortorder: '2'
          color: F7941D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.ram.used
        - sortorder: '3'
          drawtype: FILLED_REGION
          color: 2774A4
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.ram.total
    - uuid: 94f37b640d9e40cfa2b1c5c24ab47781
      name: 'Queries Upstream'
      graph_items:
        - color: FF0000
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.blocked
        - sortorder: '1'
          color: 80FF00
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.cached
        - sortorder: '2'
          color: 00FFFF
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.forwarded
        - sortorder: '3'
          drawtype: FILLED_REGION
          color: '666699'
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.total
    - uuid: d6a7971ee18a48c1b4d4ead0c3c9da33
      name: 'Query replies'
      graph_items:
        - color: 199C0D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_blob
        - sortorder: '1'
          color: F63100
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_cname
        - sortorder: '2'
          color: 2774A4
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_dnssec
        - sortorder: '3'
          color: F7941D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_domain
        - sortorder: '4'
          color: FC6EA3
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_ip
        - sortorder: '5'
          color: 6C59DC
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_nodata
        - sortorder: '6'
          color: C7A72D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_none
        - sortorder: '7'
          color: BA2A5D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_notimp
        - sortorder: '8'
          color: F230E0
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_nxdomain
        - sortorder: '9'
          color: 5CCD18
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_other
        - sortorder: '10'
          color: BB2A02
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_refused
        - sortorder: '11'
          color: AC41A5
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_rrname
        - sortorder: '12'
          color: 89ABF8
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_servfail
        - sortorder: '13'
          color: 7EC25C
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.replies_unknown
    - uuid: 5686e17983674e7bb3db277af98d4ec4
      name: 'Query types'
      graph_items:
        - color: 199C0D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_a
        - sortorder: '1'
          color: F63100
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_aaaa
        - sortorder: '2'
          color: 2774A4
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_any
        - sortorder: '3'
          color: F7941D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_dnskey
        - sortorder: '4'
          color: FC6EA3
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_ds
        - sortorder: '5'
          color: 6C59DC
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_https
        - sortorder: '6'
          color: C7A72D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_mx
        - sortorder: '7'
          color: BA2A5D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_naptr
        - sortorder: '8'
          color: F230E0
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_ns
        - sortorder: '9'
          color: 5CCD18
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_other
        - sortorder: '10'
          color: BB2A02
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_ptr
        - sortorder: '11'
          color: AC41A5
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_rrsig
        - sortorder: '12'
          color: 89ABF8
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_soa
        - sortorder: '13'
          color: 7EC25C
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_srv
        - sortorder: '14'
          color: 3165D5
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_svcb
        - sortorder: '15'
          color: 79A277
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.queries.type_txt
    - uuid: 647115dcbcc94ebb94205cd9aaf7e6ae
      name: Swap
      graph_items:
        - color: 199C0D
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.swap.free
        - sortorder: '1'
          drawtype: FILLED_REGION
          color: F63100
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.swap.total
        - sortorder: '2'
          color: 2774A4
          calc_fnc: ALL
          item:
            host: 'APP-Pi-hole by HTTP'
            key: pihole.system.swap.used
